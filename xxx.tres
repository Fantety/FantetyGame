[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://q13i78fhrm8g"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_j38a7"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_itkhq"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_8t78a"]
constant = Color(0, 1, 1, 1)

[resource]
code = "shader_type canvas_item;



void fragment() {
// Input:2
	vec2 n_out2p0 = UV;


// ColorConstant:4
	vec4 n_out4p0 = vec4(0.000000, 1.000000, 1.000000, 1.000000);


// FloatOp:3
	float n_out3p0 = n_out2p0.x + n_out4p0.x;


// Output:0
	COLOR.rgb = vec3(n_out3p0);


}
"
graph_offset = Vector2(-254.393, -156.222)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(500, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_j38a7")
nodes/fragment/2/position = Vector2(-280, 40)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_itkhq")
nodes/fragment/3/position = Vector2(160, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_8t78a")
nodes/fragment/4/position = Vector2(-220, 280)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0, 4, 0, 3, 1)
